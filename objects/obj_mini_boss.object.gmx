<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mini_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    /// Variables
    //probar orientaci√≥n
    //direction = -90;
    image_angle = direction;
    dirMove = 1;
    TargetToShoot = obj_player;
    
    BulletsAmount = 10;
    FireMode = 1;
    
    bulletSpeed = 1;
    //RegularShootDelay = 0.025;
    RegularShootDelay = 0.1;
    BurstDelay = 0.5;
    
    rotateSpeed = 180;
    
    FireTrigger = true;
    
    clamp(BulletsAmount,1,10);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delay regular shoots
FireTrigger = !FireTrigger;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Regular shoot
if(BulletsAmount==1){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction;
        bullet.image_angle = direction;
        bullet.speed = bulletSpeed;
}

//

if(BulletsAmount==2){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction - 10;
        bullet.image_angle = direction - 10;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 10;
        bullet2.image_angle = direction + 10;
        bullet2.speed = bulletSpeed;
        
}

if(BulletsAmount==3){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction;
        bullet.image_angle = direction;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 45;
        bullet2.image_angle = direction + 45;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction - 45;
        bullet3.image_angle = direction - 45;
        bullet3.speed = bulletSpeed;
}
if(BulletsAmount==4){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction - 15;
        bullet.image_angle = direction - 15;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 15;
        bullet2.image_angle = direction + 15;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction + 45;
        bullet3.image_angle = direction + 45;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction - 45;
        bullet4.image_angle = direction - 45;
        bullet4.speed = bulletSpeed;
}
if(BulletsAmount==5){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction;
        bullet.image_angle = direction;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 45;
        bullet2.image_angle = direction + 45;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction - 45;
        bullet3.image_angle = direction - 45;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction + 90;
        bullet4.image_angle = direction + 90;
        bullet4.speed = bulletSpeed;
        
        bullet5 = instance_create(x,y,obj_boss_bullet);
        bullet5.direction = direction - 90;
        bullet5.image_angle = direction - 90;
        bullet5.speed = bulletSpeed;
        
}
if(BulletsAmount==6){
       
         bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction - 20;
        bullet.image_angle = direction - 20;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 20;
        bullet2.image_angle = direction + 20;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction + 60;
        bullet3.image_angle = direction + 60;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction - 60;
        bullet4.image_angle = direction - 60;
        bullet4.speed = bulletSpeed;
        
        bullet5 = instance_create(x,y,obj_boss_bullet);
        bullet5.direction = direction + 100;
        bullet5.image_angle = direction + 100;
        bullet5.speed = bulletSpeed;
        
        bullet6 = instance_create(x,y,obj_boss_bullet);
        bullet6.direction = direction - 100;
        bullet6.image_angle = direction - 100;
        bullet6.speed = bulletSpeed;
}
if(BulletsAmount==7){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction;
        bullet.image_angle = direction;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 45;
        bullet2.image_angle = direction + 45;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction - 45;
        bullet3.image_angle = direction - 45;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction + 90;
        bullet4.image_angle = direction + 90;
        bullet4.speed = bulletSpeed;
        
        bullet5 = instance_create(x,y,obj_boss_bullet);
        bullet5.direction = direction - 90;
        bullet5.image_angle = direction - 90;
        bullet5.speed = bulletSpeed;
        
         bullet6 = instance_create(x,y,obj_boss_bullet);
        bullet6.direction = direction + 135;
        bullet6.image_angle = direction + 135;
        bullet6.speed = bulletSpeed;
        
        bullet7 = instance_create(x,y,obj_boss_bullet);
        bullet7.direction = direction - 135;
        bullet7.image_angle = direction - 135;
        bullet7.speed = bulletSpeed;
        
}

if(BulletsAmount==8){
         bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction - 13;
        bullet.image_angle = direction - 13;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 13;
        bullet2.image_angle = direction + 13;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction + 40;
        bullet3.image_angle = direction + 40;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction - 40;
        bullet4.image_angle = direction - 40;
        bullet4.speed = bulletSpeed;
        
        bullet5 = instance_create(x,y,obj_boss_bullet);
        bullet5.direction = direction + 67;
        bullet5.image_angle = direction + 67;
        bullet5.speed = bulletSpeed;
        
        bullet6 = instance_create(x,y,obj_boss_bullet);
        bullet6.direction = direction - 67;
        bullet6.image_angle = direction - 67;
        bullet6.speed = bulletSpeed;
        
        bullet7 = instance_create(x,y,obj_boss_bullet);
        bullet7.direction = direction + 94;
        bullet7.image_angle = direction + 94;
        bullet7.speed = bulletSpeed;
        
        bullet8 = instance_create(x,y,obj_boss_bullet);
        bullet8.direction = direction - 94;
        bullet8.image_angle = direction - 94;
        bullet8.speed = bulletSpeed;
}

if(BulletsAmount==9){
        bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction;
        bullet.image_angle = direction;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 33;
        bullet2.image_angle = direction + 33;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction - 33;
        bullet3.image_angle = direction - 33;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction + 66;
        bullet4.image_angle = direction + 66;
        bullet4.speed = bulletSpeed;
        
        bullet5 = instance_create(x,y,obj_boss_bullet);
        bullet5.direction = direction - 66;
        bullet5.image_angle = direction - 66;
        bullet5.speed = bulletSpeed;
        
         bullet6 = instance_create(x,y,obj_boss_bullet);
        bullet6.direction = direction + 99;
        bullet6.image_angle = direction + 99;
        bullet6.speed = bulletSpeed;
        
        bullet7 = instance_create(x,y,obj_boss_bullet);
        bullet7.direction = direction - 99;
        bullet7.image_angle = direction - 99;
        bullet7.speed = bulletSpeed;
        
        bullet8 = instance_create(x,y,obj_boss_bullet);
        bullet8.direction = direction + 132;
        bullet8.image_angle = direction + 132;
        bullet8.speed = bulletSpeed;
        
        bullet9 = instance_create(x,y,obj_boss_bullet);
        bullet9.direction = direction - 132;
        bullet9.image_angle = direction - 132;
        bullet9.speed = bulletSpeed;
        
        
}

if(BulletsAmount==10){
         bullet = instance_create(x,y,obj_boss_bullet);
        bullet.direction = direction - 18;
        bullet.image_angle = direction - 18;
        bullet.speed = bulletSpeed;
        
        bullet2 = instance_create(x,y,obj_boss_bullet);
        bullet2.direction = direction + 18;
        bullet2.image_angle = direction + 18;
        bullet2.speed = bulletSpeed;
        
        bullet3 = instance_create(x,y,obj_boss_bullet);
        bullet3.direction = direction + 54;
        bullet3.image_angle = direction + 54;
        bullet3.speed = bulletSpeed;
        
        bullet4 = instance_create(x,y,obj_boss_bullet);
        bullet4.direction = direction - 54;
        bullet4.image_angle = direction - 54;
        bullet4.speed = bulletSpeed;
        
        bullet5 = instance_create(x,y,obj_boss_bullet);
        bullet5.direction = direction + 90;
        bullet5.image_angle = direction + 90;
        bullet5.speed = bulletSpeed;
        
        bullet6 = instance_create(x,y,obj_boss_bullet);
        bullet6.direction = direction - 90;
        bullet6.image_angle = direction - 90;
        bullet6.speed = bulletSpeed;
        
        bullet7 = instance_create(x,y,obj_boss_bullet);
        bullet7.direction = direction + 126;
        bullet7.image_angle = direction + 126;
        bullet7.speed = bulletSpeed;
        
        bullet8 = instance_create(x,y,obj_boss_bullet);
        bullet8.direction = direction - 126;
        bullet8.image_angle = direction - 126;
        bullet8.speed = bulletSpeed;
        
        bullet9 = instance_create(x,y,obj_boss_bullet);
        bullet9.direction = direction + 162;
        bullet9.image_angle = direction + 162;
        bullet9.speed = bulletSpeed;
        
        bullet10 = instance_create(x,y,obj_boss_bullet);
        bullet10.direction = direction - 162;
        bullet10.image_angle = direction - 162;
        bullet10.speed = bulletSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot logic
Delta = delta_time/1000000;

//disparo normal en linea recta
if(FireMode==0){
    if(alarm[0] = -1)
    {
        alarm = room_speed * RegularShootDelay;
    }
}
//disparo normal en linea recta, con rafagas
if(FireMode==1){ 
    if(alarm[1] = -1){alarm[1] = room_speed * BurstDelay;}
          
    if(FireTrigger){
        if(alarm[0] = -1)
        {
            alarm[0] = room_speed * RegularShootDelay;
        }
    }
}
//disparo normal apuntando siempre a un objetivo
if(FireMode==2){
    direction = point_direction(x,y,TargetToShoot.x,TargetToShoot.y);
    image_angle = direction;
    if(alarm[0] = -1)
    {
        alarm = room_speed * RegularShootDelay;
    }
}
//disparo en rafagas apuntando a un objetivo
if(FireMode==3){
    direction = point_direction(x,y,TargetToShoot.x,TargetToShoot.y);
    image_angle = direction;
 
    if(alarm[1] = -1){alarm[1] = room_speed * BurstDelay;}
          
    if(FireTrigger){
        if(alarm[0] = -1)
        {
            alarm[0] = room_speed * RegularShootDelay;
        }
    }
}
//disparo normal continuo, girando mientras dispara
if(FireMode==4){
    direction += Delta * rotateSpeed;
    image_angle = direction;
 
     if(alarm[0] = -1)
    {
        alarm = room_speed * RegularShootDelay;
    }
}
//disparo en rafagas, girando mientras dispara
if(FireMode==5){
    direction += Delta * rotateSpeed;
    image_angle = direction;
 
    if(alarm[1] = -1){alarm[1] = room_speed * BurstDelay;}
          
    if(FireTrigger){
        if(alarm[0] = -1)
        {
            alarm[0] = room_speed * RegularShootDelay;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movimiento

spd = 2;

if(x &lt; 120){dirMove = 1;}

if(x &gt; 380){dirMove = -1;}

x += spd * dirMove;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
